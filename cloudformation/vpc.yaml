AWSTemplateFormatVersion: "2010-09-09"

Description: "Creates networking components"

Parameters:
  VPCName:
    Description: The name of the VPC being created.
    Type: String

Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    Public1:
      CIDR: 10.0.0.0/24
    Public2:
      CIDR: 10.0.1.0/24
    Private1:
      CIDR: 10.0.2.0/24
    Private2:
      CIDR: 10.0.3.0/24

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: !FindInMap
        - SubnetConfig
        - VPC
        - CIDR
      Tags:
        - Key: Name
          Value: !Ref VPCName

  # Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: !FindInMap
        - SubnetConfig
        - Public1
        - CIDR
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -public-
              - !Select
                - 0
                - !GetAZs

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: !FindInMap
        - SubnetConfig
        - Public2
        - CIDR
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -public-
              - !Select
                - 1
                - !GetAZs

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      CidrBlock: !FindInMap
        - SubnetConfig
        - Private1
        - CIDR
      MapPublicIpOnLaunch: "false"
      Tags:
        - Key: Network
          Value: Private
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -private-
              - !Select
                - 2
                - !GetAZs

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Select:
          - 3
          - Fn::GetAZs: ""
      CidrBlock: !FindInMap
        - SubnetConfig
        - Private2
        - CIDR
      MapPublicIpOnLaunch: "false"
      Tags:
        - Key: Network
          Value: Private
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -private-
              - !Select
                - 3
                - !GetAZs

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -IGW

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Route table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -public-route-table

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -public-nacl

  InboundHTTPPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: allow
      Egress: "false"
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: "0"
        To: "65535"

  OutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: allow
      Egress: "true"
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: "0"
        To: "65535"

  PublicSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      NetworkAclId: !Ref PublicNetworkAcl

  PublicSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      NetworkAclId: !Ref PublicNetworkAcl

  # ElasticIP0:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc

  # ElasticIP1:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc

  # NATGateway0:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt ElasticIP0.AllocationId
  #     SubnetId: !Ref PublicSubnet1

  # NATGateway1:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt ElasticIP1.AllocationId
  #     SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -private-route-table-0

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join
            - ""
            - - !Ref VPCName
              - -private-route-table-1

  # PrivateRouteToInternet0:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: !Ref PrivateRouteTable1
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref NATGateway0

  # PrivateRouteToInternet1:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: !Ref PrivateRouteTable2
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref NATGateway1

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VPCId:
    Description: VPCId of VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-VPC

  PublicSubnet1:
    Description: SubnetId of public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PublicSubnet1

  PublicSubnet2:
    Description: SubnetId of public subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PublicSubnet2

  PublicSubnet1AZ:
    Description: AZ of public subnet 1
    Value: !Select [0, Fn::GetAZs: ""]

  PublicSubnet2AZ:
    Description: AZ of public subnet 2
    Value: !Select [1, Fn::GetAZs: ""]

  PrivateSubnet1:
    Description: SubnetId of private subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateSubnet1

  PrivateSubnet2:
    Description: SubnetId of private subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateSubnet2

  DefaultSecurityGroup:
    Description: DefaultSecurityGroup Id
    Value: !GetAtt VPC.DefaultSecurityGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DefaultSecurityGroup
